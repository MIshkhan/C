Queue::Queue(){
  front = -1; 
  rear = -1;
}
  
bool Queue::IsEmpty(){
  return (front == -1 && rear == -1); 
}

bool Queue::IsFull(){
  return (rear+1)%MAX_SIZE == front ? true : false;
}

void Queue::Enqueue(int x){
  if(IsFull()) return;
  if (IsEmpty()) front = rear = 0; 
  else rear = (rear+1)%MAX_SIZE;
  A[rear] = x;
}

void Queue::Dequeue(){
  if(IsEmpty()) return;
  else if(front == rear ) rear = front = -1;
  else front = (front+1)%MAX_SIZE;
}
  
int Queue::Front(){
  if(front == -1) return -1; 
  return A[front];
}
